<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:validations="clr-namespace:Wpf.Utility.MyValidationRule">
    <Color x:Key="MyBlue">#FF3D50A6</Color>
	<!-- 应该在此定义资源字典条目。-->
    <!--button-->
    <ControlTemplate  x:Key="MyButton" TargetType="{x:Type Button}">
        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" CornerRadius="20,20,20,20" Name="PART_Background">
            <Border.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FF3B99E1" Offset="0.0" />
                    <GradientStop Color="#FF3B99E1" Offset="0.5" />
                    <GradientStop Color="#FF3B99E1" Offset="0.0" />
                </LinearGradientBrush>
            </Border.Background>
            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
    </ControlTemplate>
    <Style x:Key="MyButtonStyle">
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="true">
                <Setter Property="Path.Cursor" Value="Hand"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--head的形状-->
    <ControlTemplate  x:Key="MyHead">
        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" CornerRadius="50,50,50,50" Name="PART_Background">
            <Border.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFD9F5FF" Offset="0.0" />
                    <GradientStop Color="#FFD9F5FF" Offset="0.5" />
                    <GradientStop Color="#FFD9F5FF" Offset="0.0" />
                </LinearGradientBrush>
            </Border.Background>
            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
    </ControlTemplate>
    <!--user xml-->
    <XmlDataProvider x:Key="xmlUser" Source="D:/user.xml" XPath="user/userinfo"></XmlDataProvider>
    <!--textbox的校验-->
    <Style x:Key="ValidationTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right"
                                           Foreground="Red" FontSize="14" FontWeight="Bold"
                                           ToolTip="{Binding ElementName=adornerPlaceholder,
                                           Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                    X
                        </TextBlock>
                        <Border BorderBrush="Red" BorderThickness="1" CornerRadius="3">
                            <AdornedElementPlaceholder Name="adornerPlaceholder"></AdornedElementPlaceholder>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--密码输入框的校验风格-->
    <Style x:Key="ValidationPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Right"
                                           Foreground="Red" FontSize="14" FontWeight="Bold"
                                           ToolTip="{Binding ElementName=adornerPlaceholder,
                                           Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                    X
                        </TextBlock>
                        <Border BorderBrush="Red" BorderThickness="1" CornerRadius="3">
                            <AdornedElementPlaceholder Name="adornerPlaceholder"></AdornedElementPlaceholder>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--各个省份的风格  RenderTransform="0.66,0,0,0.66,72,72" 控制大小-->
    <Style x:Key="province">
        <Setter Property="Path.Fill" Value="#26000000"></Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="true">
                <Setter Property="Path.Cursor" Value="Hand"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--省份文字的风格-->
    <Style x:Key="provinceName">
        <Setter Property="Glyphs.FontRenderingEmSize" Value="12"></Setter>
        <Setter Property="Glyphs.Fill" Value="#59000000"></Setter>
    </Style>
    <!--省份button的风格-->
    <Style x:Key="provinceButton">
        <Setter Property="Button.Content" Value="{Binding province}"></Setter>
        <Setter Property="Button.Foreground" Value="{x:Null}"></Setter>
    </Style>
    
    <validations:NotNullValidationRule x:Key="NotNullValidationRule" />
    <validations:PasswordValidationRule x:Key="PasswordValidationRule" />
</ResourceDictionary>